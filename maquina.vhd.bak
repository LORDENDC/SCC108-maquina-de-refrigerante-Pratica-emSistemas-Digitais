LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

ENTITY maquina is
    port (
        clk: in std_logic;
        clk_button: in std_logic;
        reset_debouncer: in std_logic;
        dinheiro_colocando: in std_logic;
        dinheiro_entrando: in std_logic_vector(1 downto 0);
        requisitado: in std_logic;
        saida: out std_logic_vector(1 downto 0);
        refrigerante_saiu: out std_logic;
        dinheiro_maquina_display: out std_logic_vector(14 downto 0);
        reset: in std_logic;
    );

END maquina;

ARCHITECTURE arch of maquina IS
    COMPONENT debouncer
    PORT (
        clk_fpga, rst_debouncer, input_key: in std_logic;
        out_key: out std_logic);
	END COMPONENT;

    COMPONENT sevensegmentdisplay
    PORT (
        d0, d1, d2, d3: in std_logic;
        A, B, C, D, E, F, G: out std_logic);
    END COMPONENT;

    TYPE st IS (aguardando_dinheiro, aguardando_requisicao, refrigerante_saiu);
    SIGNAL estado: st;
    SIGNAL out_clk_db, out_rst_db: std_logic;
    SIGNAL dinheiro_maquina: std_logic_vector(8 downto 0);

BEGIN
        D1: debouncer PORT MAP(
            clk_fpga => clk,
            rst_debouncer => reset_debouncer,
            input_key => clk_button,
            out_key => out_clk_db
        );
        D2: debouncer PORT MAP(
            clk_fpga => clk,
            rst_debouncer => reset_debouncer,
            input_key => reset,
            out_key => out_rst_db
        );
        DisplayDinheiroMaquina0: sevensegmentdisplay PORT MAP(
            d0 => dinheiro_maquina(0),
            d1 => dinheiro_maquina(1),
            d2 => dinheiro_maquina(2),
            d3 => dinheiro_maquina(3),
            A => dinheiro_maquina_display(0),
            B => dinheiro_maquina_display(1),
            C => dinheiro_maquina_display(2),
            D => dinheiro_maquina_display(3),
            E => dinheiro_maquina_display(4),
            F => dinheiro_maquina_display(5),
            G => dinheiro_maquina_display(6)
        );
        DisplayDinheiroMaquina1: sevensegmentdisplay PORT MAP(
            d0 => dinheiro_maquina(4),
            d1 => dinheiro_maquina(5),
            d2 => dinheiro_maquina(6),
            d3 => dinheiro_maquina(7),
            A => dinheiro_maquina_display(7),
            B => dinheiro_maquina_display(8),
            C => dinheiro_maquina_display(9),
            D => dinheiro_maquina_display(10),
            E => dinheiro_maquina_display(11),
            F => dinheiro_maquina_display(12),
            G => dinheiro_maquina_display(13)
        );

        PROCESS (out_clk_db, out_rst_db)
        BEGIN
            IF (out_rst_db = '1') THEN
                dinheiro_maquina <= "000000000";
                estado <= aguardando_dinheiro;
            ELSIF rising_edge(out_clk_db) THEN
                IF (dinheiro_colocando = '1') THEN
                    CASE dinheiro_entrando =>
                        WHEN "00" =>
                            dinheiro_maquina <= dinheiro_maquina + 10;
                        WHEN "01" =>
                            dinheiro_maquina <= dinheiro_maquina + 25;
                        WHEN "10" =>
                            dinheiro_maquina <= dinheiro_maquina + 50;
                        WHEN "11" =>
                            dinheiro_maquina <= dinheiro_maquina + 100;
                    END CASE;

                CASE estado IS
                    WHEN aguardando_dinheiro =>
                        refrigerante_saiu <= '0';

                        IF (dinheiro_maquina = 100) THEN
                            estado <= aguardando_requisicao;
                        END IF;

                        IF (dinheiro_maquina > 100) THEN
                            dinheiro_maquina <= "000000000";
                        END IF;
                    WHEN aguardando_requisicao =>
                        IF (dinheiro_maquina > 100) THEN
                            dinheiro_maquina <= "000000000";
                        ELSIF (requisitado = '1') THEN
                            dinheiro_maquina <= "000000000";
                            estado <= refrigerante_saiu;
                        END IF;
                    WHEN refrigerante_saiu =>
                        estado <= aguardando_dinheiro;
                        refrigerante_saiu <= '1';
                END CASE;
            END IF;
END PROCESS;

WITH estado SELECT saida <=
    "00" WHEN aguardando_dinheiro,
    "01" WHEN aguardando_requisicao,
    "10" WHEN refrigerante_saiu;
END arch;